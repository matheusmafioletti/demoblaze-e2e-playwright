name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit
      include_mobile:
        description: 'Include mobile tests'
        required: true
        default: true
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: |
        # Determine which projects to run
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          # Manual trigger - use selected options
          PROJECTS=""
          
          # Add desktop browsers based on selection
          if [ "${{ inputs.browser }}" == "all" ]; then
            PROJECTS="--project=chromium --project=firefox --project=webkit"
          else
            PROJECTS="--project=${{ inputs.browser }}"
          fi
          
          # Add mobile if selected
          if [ "${{ inputs.include_mobile }}" == "true" ]; then
            PROJECTS="$PROJECTS --project=mobile-chrome --project=mobile-safari"
          fi
          
          echo "Running tests with projects: $PROJECTS"
          npx playwright test $PROJECTS
        else
          # Automatic trigger (push/PR) - run all tests
          echo "Running all tests (automatic trigger)"
          npm test
        fi

    - name: Get history from gh-pages
      if: always()
      continue-on-error: true
      run: |
        echo "📜 Attempting to fetch Allure history from gh-pages..."
        
        # Try to checkout gh-pages branch
        if git fetch origin gh-pages --depth=1 2>/dev/null; then
          echo "✅ Found gh-pages branch"
          
          # Checkout only the history directory
          git checkout origin/gh-pages -- history 2>/dev/null || echo "⚠️ No history directory found in gh-pages"
          
          # If history exists, copy it to allure-results
          if [ -d "history" ]; then
            echo "📊 Copying history to allure-results..."
            cp -r history allure-results/
            echo "✅ History copied successfully"
            ls -la allure-results/history/
          else
            echo "⚠️ No history found (normal for first run)"
          fi
        else
          echo "⚠️ No gh-pages branch yet (normal for first run)"
        fi

    - name: Generate Allure Report
      if: always()
      run: |
        echo "📊 Generating Allure Report..."
        npx allure generate allure-results --clean -o allure-report
        echo "✅ Allure report generated successfully"
    
    - name: Verify Allure Report
      if: always()
      run: |
        echo "🔍 Verifying Allure report generation..."
        
        if [ -d "allure-report" ]; then
          echo "✅ allure-report directory created"
          echo ""
          echo "📁 Report structure:"
          ls -la allure-report/ | head -15
          
          if [ -d "allure-report/history" ]; then
            echo ""
            echo "📊 History directory found in report:"
            ls -la allure-report/history/
            echo "✅ Trend charts will be visible!"
          else
            echo "⚠️ No history/ in report (normal for first run)"
            echo "   Trend charts will appear after 2+ runs"
          fi
        else
          echo "❌ allure-report directory not found!"
          exit 1
        fi
    
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download Allure History (Complete Report)
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: allure-history
      
      - name: Prepare Allure Report for deployment
        run: |
          echo "📊 Preparing Allure Report for GitHub Pages..."
          
          # Verify allure-history exists
          if [ ! -d "allure-history" ] || [ ! "$(ls -A allure-history)" ]; then
            echo "❌ ERROR: allure-history not found or empty"
            exit 1
          fi
          
          echo "✅ allure-history contains:"
          ls -la allure-history/ | head -20
          
          # Check if history directory exists inside
          if [ -d "allure-history/history" ]; then
            echo ""
            echo "📊 History data found:"
            ls -la allure-history/history/
            echo "✅ Trend charts will be visible in this report!"
          else
            echo "⚠️ No history/ subdirectory yet (normal for first run)"
            echo "   Trend charts will appear after 2+ runs"
          fi
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'allure-history'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment Summary
        run: |
          echo "🎉 Allure Report deployed successfully!"
          echo "📊 View your report at: ${{ steps.deployment.outputs.page_url }}"
