name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npm test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test results JSON
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true
      
      - name: Download current report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: ./current-report
      
      - name: Prepare history and index page
        run: |
          mkdir -p gh-pages/reports
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          RUN_NUMBER=${{ github.run_number }}
          COMMIT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          REPORT_DIR="gh-pages/reports/run-${RUN_NUMBER}-${TIMESTAMP}"
          
          # Copy current report to history
          cp -r current-report "$REPORT_DIR"
          
          # Create index.html with links to all reports
          cat > gh-pages/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Playwright Test Reports - Demoblaze E2E</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <style>
              * { margin: 0; padding: 0; box-sizing: border-box; }
              body { 
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                padding: 20px;
              }
              .container { 
                max-width: 1200px; 
                margin: 0 auto; 
                background: white;
                border-radius: 16px;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                overflow: hidden;
              }
              .header {
                background: linear-gradient(135deg, #2d3748 0%, #1a202c 100%);
                color: white;
                padding: 40px;
                text-align: center;
              }
              .header h1 { 
                font-size: 2.5em; 
                margin-bottom: 10px;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 15px;
              }
              .header p { 
                font-size: 1.1em; 
                opacity: 0.9;
              }
              .content { padding: 40px; }
              .stats {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 20px;
                margin-bottom: 40px;
              }
              .stat-card {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                padding: 20px;
                border-radius: 12px;
                text-align: center;
              }
              .stat-card h3 { font-size: 2em; margin-bottom: 5px; }
              .stat-card p { opacity: 0.9; }
              .report-list { list-style: none; }
              .report-item { 
                background: #f7fafc;
                margin: 12px 0;
                padding: 20px;
                border-radius: 12px;
                display: flex;
                justify-content: space-between;
                align-items: center;
                transition: all 0.3s ease;
                border-left: 4px solid transparent;
              }
              .report-item:hover { 
                background: #edf2f7;
                transform: translateX(5px);
                box-shadow: 0 4px 12px rgba(0,0,0,0.1);
              }
              .report-item.latest { 
                background: linear-gradient(135deg, #dbeafe 0%, #e0e7ff 100%);
                border-left-color: #667eea;
                font-weight: 600;
              }
              .report-info {
                display: flex;
                flex-direction: column;
                gap: 5px;
              }
              .report-title { 
                font-size: 1.1em;
                color: #2d3748;
              }
              .report-meta {
                font-size: 0.9em;
                color: #718096;
              }
              .view-button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                padding: 10px 24px;
                border-radius: 8px;
                text-decoration: none;
                font-weight: 600;
                transition: all 0.3s ease;
                display: inline-block;
              }
              .view-button:hover { 
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
              }
              .badge {
                background: #48bb78;
                color: white;
                padding: 4px 12px;
                border-radius: 12px;
                font-size: 0.85em;
                font-weight: 600;
                margin-left: 10px;
              }
              @media (max-width: 768px) {
                .header h1 { font-size: 1.8em; }
                .report-item { flex-direction: column; gap: 15px; text-align: center; }
                .content { padding: 20px; }
              }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>
                  <span>ðŸŽ­</span>
                  <span>Playwright Test Reports</span>
                </h1>
                <p>E2E Test Execution History - Demoblaze Project</p>
              </div>
              <div class="content">
                <div class="stats">
                  <div class="stat-card">
                    <h3 id="total-runs">0</h3>
                    <p>Total Runs</p>
                  </div>
                  <div class="stat-card">
                    <h3 id="latest-run">-</h3>
                    <p>Latest Run</p>
                  </div>
                </div>
                <h2 style="margin-bottom: 20px; color: #2d3748;">ðŸ“Š Test Reports</h2>
                <ul class="report-list" id="report-list">
          EOF
          
          # Count reports and list them (newest first)
          REPORT_COUNT=0
          FIRST=true
          LATEST_DATE=""
          
          for report in $(ls -t gh-pages/reports 2>/dev/null); do
            REPORT_COUNT=$((REPORT_COUNT + 1))
            RUN=$(echo $report | cut -d'-' -f2)
            DATE=$(echo $report | sed 's/run-[0-9]*-//' | sed 's/_/ /' | sed 's/-/:/g')
            
            if [ "$FIRST" = true ]; then
              LATEST_DATE="Run #$RUN"
              echo "<li class='report-item latest'>" >> gh-pages/index.html
              echo "  <div class='report-info'>" >> gh-pages/index.html
              echo "    <div class='report-title'>Run #$RUN <span class='badge'>Latest</span></div>" >> gh-pages/index.html
              echo "    <div class='report-meta'>ðŸ“… $DATE</div>" >> gh-pages/index.html
              echo "  </div>" >> gh-pages/index.html
              echo "  <a class='view-button' href='reports/$report/index.html'>View Report â†’</a>" >> gh-pages/index.html
              echo "</li>" >> gh-pages/index.html
              FIRST=false
            else
              echo "<li class='report-item'>" >> gh-pages/index.html
              echo "  <div class='report-info'>" >> gh-pages/index.html
              echo "    <div class='report-title'>Run #$RUN</div>" >> gh-pages/index.html
              echo "    <div class='report-meta'>ðŸ“… $DATE</div>" >> gh-pages/index.html
              echo "  </div>" >> gh-pages/index.html
              echo "  <a class='view-button' href='reports/$report/index.html'>View Report â†’</a>" >> gh-pages/index.html
              echo "</li>" >> gh-pages/index.html
            fi
          done
          
          # If no reports found, show message
          if [ $REPORT_COUNT -eq 0 ]; then
            echo "<li class='report-item'><div class='report-info'><div class='report-title'>No reports available yet</div></div></li>" >> gh-pages/index.html
            LATEST_DATE="N/A"
          fi
          
          cat >> gh-pages/index.html << EOF
                </ul>
              </div>
            </div>
            <script>
              document.getElementById('total-runs').textContent = '$REPORT_COUNT';
              document.getElementById('latest-run').textContent = '$LATEST_DATE';
            </script>
          </body>
          </html>
          EOF
          
          echo "âœ… Index page created with $REPORT_COUNT reports"
          echo "Latest report: $LATEST_DATE"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'gh-pages'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
