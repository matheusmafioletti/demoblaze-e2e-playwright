name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit
      include_mobile:
        description: 'Include mobile tests'
        required: true
        default: true
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: |
        # Determine which projects to run
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          # Manual trigger - use selected options
          PROJECTS=""
          
          # Add desktop browsers based on selection
          if [ "${{ inputs.browser }}" == "all" ]; then
            PROJECTS="--project=chromium --project=firefox --project=webkit"
          else
            PROJECTS="--project=${{ inputs.browser }}"
          fi
          
          # Add mobile if selected
          if [ "${{ inputs.include_mobile }}" == "true" ]; then
            PROJECTS="$PROJECTS --project=mobile-chrome --project=mobile-safari"
          fi
          
          echo "Running tests with projects: $PROJECTS"
          npx playwright test $PROJECTS
        else
          # Automatic trigger (push/PR) - run all tests
          echo "Running all tests (automatic trigger)"
          npm test
        fi

    - name: Generate Allure Report with History
      if: always()
      # This action automatically:
      # 1. Fetches history from gh-pages branch
      # 2. Generates Allure report with trend data
      # 3. Preserves history for next runs
      uses: simple-elf/allure-report-action@master
      with:
        allure_results: allure-results
        allure_report: allure-report
        allure_history: allure-history
        keep_reports: 20
    
    - name: Verify Allure History Generation
      if: always()
      run: |
        echo "üîç Verifying Allure history generation..."
        
        if [ -d "allure-history" ]; then
          echo "‚úÖ allure-history directory created"
          ls -la allure-history/
        else
          echo "‚ö†Ô∏è allure-history directory not found"
        fi
        
        if [ -d "allure-report/history" ]; then
          echo "‚úÖ allure-report/history directory exists"
          ls -la allure-report/history/
        else
          echo "‚ö†Ô∏è allure-report/history not found"
        fi
    
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30
    
    - name: Upload Allure History
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-history
        path: allure-history/
        retention-days: 30

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download Allure report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report
      
      - name: Download Allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: allure-history
        continue-on-error: true
      
      - name: Prepare Allure Report for deployment
        run: |
          echo "üìä Preparing Allure Report for GitHub Pages..."
          
          # Create deployment directory
          mkdir -p gh-pages
          
          # Copy Allure report to deployment directory
          if [ -d "allure-report" ] && [ "$(ls -A allure-report)" ]; then
            echo "üìÑ Copying Allure report..."
            cp -r allure-report/* gh-pages/
            echo "‚úÖ Allure report copied successfully"
          else
            echo "‚ùå ERROR: Allure report not found or empty"
            exit 1
          fi
          
          # Preserve Allure history for next run (enables trend charts)
          if [ -d "allure-history" ] && [ "$(ls -A allure-history)" ]; then
            echo "üìú Preserving history for next run..."
            cp -r allure-history gh-pages/
            echo "‚úÖ History preserved (trend charts will be available)"
          else
            echo "‚ö†Ô∏è No history found (normal for first run)"
          fi
          
          echo ""
          echo "‚úÖ Deployment package ready!"
          echo "   üìä Report will be at: https://<username>.github.io/<repository>/"
          echo "   üìà Trend charts will appear after multiple runs"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'gh-pages'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
